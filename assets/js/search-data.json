{
  
    
        "post0": {
            "title": "Title",
            "content": "Lesson 3.14.1 . Lesson 3.15.1 . What is randomization? . 1) Randomization generates a value between two numbers. For example RANDOM(1,3) may result as 1 or 2 or 3, either one of those. 2) Now if we look into our day to day life we can see that randomization is all around us. . Now for a piece of candy does anyone want to tell us an example of randomization during our day to day life. . 3) In order to use the random function we have to first import random at the very beggining. . Now lets look at the code below right here.. . import random answer1 = random.randint(0,3) answer2 = random.randint(1,8) answer3 = answer1 + answer2 print(answer3) . 8 . 1) The lowest number that will be generated is 0 for answer 1 and for answer2, the lowest that will be generated is 1 so the lowest number that can be generated for answer 3 would be 1. 2) The highest number that will be generated to answer1 is 3 and the highest number that will be generated for answer 2 is 8 so the highest number for answer 3 would be 11. 3) The range of numbers that answer 3 could print out would be from 1 to 11. . So a normal dice contains six sides with 1-6 on the individual sides. Which of the following code would simulate the result of rolling the dice three times and adds together all the obtained values together? . A. . import random sum = random.randint(1,6) + random.randint(1,6) + random.randint(1,6) print(sum) . 12 . B. . import random sum = random.randint(1,18) print(sum) . 17 . C. . import random sum = 3*random.randint(1,6) print(sum) . 12 . 1) Its not B because B is saying that it is going to choose one number between the range of 1 and 18 and not the sum of 3 diff numbers. . 2) C is not correct also because C is saying that the computer is choosing one random between 1 and 6 and multiplying that 3 times but we want the sum of three different numbers between 1 and 6. . 3) So the answer is A. . For the last example: . import random i = 1 while i &lt; 4: choose = random.randint(1,10) print(choose) i += 1 . 6 9 8 . Which answers could be possible for the code above? . A. 4 7 6 . B. 9 1 8 . C. 2 11 5 . D. 5 10 2 . Random can also have different methods, in the above examples we only used one example, randint which returns a random number between the given range. Down below I have created a table of all the methods with the description of what it is used for with the random function. . Method | Description | : | :-: seed() | Initialize the random number generator getstate() | Returns the current internal state of the random number generator setstate() | Restores the internal state of the random number generator getrandbits() | Returns a number representing the random bits randrange() | Returns a random number between the given range randint() | Returns a random number between the given range choice() | Returns a random element from the given sequence choices() | Returns a list with a random selection from the given sequence shuffle() | Takes a sequence and returns the sequence in a random order sample() | Returns a given sample of a sequence random() | Returns a random float number between 0 and 1 uniform() | Returns a random float number between two given parameters betavariate() | Returns a random float number between 0 and 1 based on the Beta distribution (used in statistics) expovariate() | Returns a random float number based on the Exponential distribution (used in statistics) gammavariate() | Returns a random float number based on the Gamma distribution (used in statistics) gauss() | Returns a random float number based on the Gaussian distribution (used in probability theories) lognormvariate() | Returns a random float number based on a log-normal distribution (used in probability theories) normalvariate() | Returns a random float number based on the normal distribution (used in probability theories) vonmisesvariate() | Returns a random float number based on the von Mises distribution (used in directional statistics) paretovariate() | Returns a random float number based on the Pareto distribution (used in probability theories) weibullvariate() | Returns a random float number based on the Weibull distribution (used in statistics) . For recap: 1) random function generates a random number from a to b (range of two numbers) 2) You need to import random in order to use the random function 3) Every result from an import function is equally likely to occur . Hacks for lesson 3.15.1 . Write a few lines of code that implements the import function | | . Lesson 3.15.2 .",
            "url": "https://nighthawkcoders.github.io/TeamOrbOrb/2022/12/11/OutlineForLesson.html",
            "relUrl": "/2022/12/11/OutlineForLesson.html",
            "date": " • Dec 11, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Unit 3 Sections 8 and 10",
            "content": "Section 8 - Iteration . Section Objectives: . Express an algorithm that uses iteration without using a programming language | Determine the result or side effect of iteration statements | Write iteration statements | . Section Vocabulary: . Iteration: a repeating portion of an algorithm, repeats a specified number of times or until a given condition is met . Iteration Statements: change the sequential flow of control by repeating a set of statements zero or more times, until a stopping condition is met . Repeat Until: if the condition evaluates to true initially, the loop body is not executed at all, due to the condition being checked before the loop . . Unit 3 Section 8.1 . Unit 3 Section 8.1 - Taiyo Iwazaki . Lesson Objective: Express an algorithm that uses iteration without using a programming language . LESSON . . Unit 3 Section 8.2 . Unit 3 Section 8.2 - Parav Saliwani . Lesson Objective: Determine the result or side effect of iteration statements . LESSON . . Unit 3 Section 8.3 . Unit 3 Section 8.3 - Nikhil . Lesson Objective: Write iteration statements . LESSON . . HACKS Unit 3 Section 8 . Hacks Unit 3 Section 8.1 . Put Hacks Here . Hacks Unit 3 Section 8.2 . Put Hacks Here . Hacks Unit 3 Section 8.3 . Put Hacks Here . . Section 10 - Lists - Luna Iwazaki, Ethan Tran . Section Objectives: . For list operations, write expressions that use list indexing and list procedures | For algorithms involving elements of a list, write iteration statements to traverse a list | For list operations, evaluate expression that use list indexing and list procedures | For algorithms involving elements of a list, determine the result of an algorithm that includes list traversals | . Section Vocabulary: . Traversing Lists: where all elements in the list are accessed, or a partial traversal, where only a portion of elements are accessed (can be a complete traversal) . Essential Knowledge: . List procedures are implemented in accordance with the syntax rules of the programming language . | Iteration Statements can be used to traverse a list . | !!! AP EXAM provides pseudocode for loops | Knowledge of existing algorithms that use iteration can help in constructing new algorithms: | . Unit 3 Section 10 . Unit 3 Section 10 - Luna Iwazaki . . HACKS Unit 3 Section 10 . Find the lowest value in a list . Use the list made bellow | Make a variable to hold the minimum and set it to potential minimum value | Loop | Check each element to see if it is less than the minimum variable | If the element is less than the minimum variable, update the minimum | After all the elements of the list have been checked, display the minimum value | . nums[&quot;10&quot;, &quot;15&quot;, &quot;20&quot;, &quot;25&quot;, &quot;30&quot;, &quot;35&quot;] min .",
            "url": "https://nighthawkcoders.github.io/TeamOrbOrb/lesson%20plans/2022/11/28/Unit_3.8_3.10.html",
            "relUrl": "/lesson%20plans/2022/11/28/Unit_3.8_3.10.html",
            "date": " • Nov 28, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Unit 3 Sections 8 and 10 HACKS",
            "content": "Unit 3 Section 8 . Section 8 HACKS . Unit 3 Section 8.1 . Unit 3 Section 8.2 . Unit 3 Section 8.3 . Unit 3 Section 10 . Section 10 HACKS .",
            "url": "https://nighthawkcoders.github.io/TeamOrbOrb/unit%203/2022/11/28/Unit_3.8-3.10_HACKS.html",
            "relUrl": "/unit%203/2022/11/28/Unit_3.8-3.10_HACKS.html",
            "date": " • Nov 28, 2022"
        }
        
    
  

  
  
      ,"page0": {
          "title": "Schedule",
          "content": ". Unit 4: Algorithmic Programming . Trimester 2 begins with student teaching and a focus on algorithms. Each week a “Student Team” has a teaching assignment supported by College Board materials. Additionally, the Teacher is providing Career Tech mini-labs that correspond to one or more topics for the week. Use the two things together as you improve your learning experience, Frontend blog and Jupyter Notebooks. . . Week Sprint/Points Link AP Test Prep Career Tech Human Prep . 13 | | | | | . 14 | | | | | . 15 | | | | | . 16 | | | | | . . Unit 3: N@tM Project, Web, Systems, and Data . The beginning of Trimester 2 is focussed on Algorithms and Coding. Student need to build their own portfolio. That portfolio should focus on their interests in Python and JavaScript programming. . . Week Sprint/Points Link AP Test Prep Career Tech Human Prep . 8 | | | | | . 9 | | | | | . 10 | | | | | . 11 | | | | | . 12 | | | | | . . Unit 2: Introduction to Web Development . Websites are made up of several key parts: Frontend, Backend, Data and Deployment. The focus for these weeks is to enable students to perform the aspects of constructing and deploying a simple Website. Fastpages got us started on these concepts, but now we will start building a Website from the ground up. Once again, there will be a lot of learning focused tools and getting things working. But, by the end of the Unit, students will be ready to start many of the technical coding aspects of Web Development, having established a Deployed Website. On Nov 3rd our Trimester work will end with a project and student participation in Electives Department “Night at the Museum” (N@tM). . . Week Sprint/Points Link AP Test Prep Career Tech Human Prep . 4 | | | | | . 5 | | | | | . 6 | | | | | . 7 | | | | | . . Unit 1: Introduction to Tools and Resources . The initial weeks focus on introducing Tools, Pair Programming, and the AP Resources that we plan to use throughout the year. At the end of Weeks 0-3, students will be exposed to blogging with GitHub Pages; developing with Jupyter Notebooks, Python, JavaScript, HTML, and Code.org AppLab; working with AP classroom and becoming familiar with Create Performance Task project requirements. . . Week Sprint/Points Link AP Test Prep Career Tech Human Prep . 0 | | | | | . 1 | | | | | . 2 | | | | | . 3 | | | | | .",
          "url": "https://nighthawkcoders.github.io/TeamOrbOrb/schedule",
          "relUrl": "/schedule",
          "date": ""
      }
      
  

  

  

  
      ,"page3": {
          "title": "",
          "content": "Objectives . Team Orb Orb Fast pages . Blogs .",
          "url": "https://nighthawkcoders.github.io/TeamOrbOrb/",
          "relUrl": "/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://nighthawkcoders.github.io/TeamOrbOrb/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}